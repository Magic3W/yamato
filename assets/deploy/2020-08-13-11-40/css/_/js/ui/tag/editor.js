depend("_scss/ui/tag/editor",["m3/core/collection"],function(h){var f=function(a,d){var b=this;this.outer=document.createElement("div");this.input=document.createElement("input");this.rendered=document.createElement("span");this.tags=a;this.onchange=d;this.outer.appendChild(this.rendered);this.outer.appendChild(this.input);this.redraw();this.outer.className="tag-editor tag-editor-outer";this.input.className="tag-editor tag-editor-input";this.rendered.className="tag-editor tag-editor-rendered";this.input.addEventListener("keydown",
function(c){0===b.input.value.trim().length||","!==c.key&&"Enter"!==c.key&&"Tab"!==c.key||(b.tags.push(new e(this.value)),b.redraw(),this.value="",c.preventDefault(),b.onchange());8===c.keyCode&&0===b.input.value.length&&(b.tags.pop(),b.redraw(),b.onchange())});this.outer.addEventListener("click",function(){b.input.focus()})};f.prototype={getOuter:function(){return this.outer},redraw:function(){var a=this;this.rendered.innerHTML="";this.tags.each(function(d){var b=document.createElement("span"),c=
document.createElement("span");b.appendChild(document.createTextNode(d.content));b.className="tag-editor tag-editor-tag";b.addEventListener("click",function(){a.input.value.trim()&&a.tags.push(new e(a.input.value));a.remove(d);a.input.value=d.content});a.rendered.appendChild(b);b.appendChild(c);c.className="tag-editor tag-editor-delete";c.addEventListener("click",function(k){a.remove(d);k.stopPropagation()})})},remove:function(a){this.tags=this.tags.filter(function(d){return a!==d});this.redraw();
this.onchange()},getTags:function(){return this.tags}};var e=function(a){this.content=a;this.html=void 0};e.prototype={};var g=function(a,d){var b=this;this.element=a;this.listener=d;this.tags=h(a.innerHTML.split(",")).filter(function(c){return""!==c}).each(function(c){return new e(c.trim())});this.replace=new f(this.tags,function(){b.commit()});this.element.style.display="none";this.element.parentNode.insertBefore(this.replace.getOuter(),this.element)};g.prototype={sync:function(){this.tags=this.replace.getTags()},
commit:function(){this.sync();this.element.innerHTML=this.tags.each(function(a){return a.content}).raw().join(",");this.listener(this.tags)}};return g});
